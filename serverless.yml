service: notifications-platform

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    STAGE: ${self:provider.stage}
    NOTIFICATIONS_TABLE: ${self:service}-${self:provider.stage}-notification_events
    NOTIFICATION_QUEUE_URL: !Ref NotificationQueue
    NOTIFICATION_DLQ_URL: !Ref NotificationDeadLetterQueue

plugins:
  - serverless-typescript
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 4000

resources:
  - ${file(resources/dynamodb.yml)}
  - ${file(resources/sqs.yml)}

functions:
  getNotifications:
    handler: src/handlers/notifications/getNotifications.handler
    events:
      - http:
          path: notification_events
          method: get
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:Scan
        Resource: 
          - !GetAtt NotificationEventsTable.Arn
          - !Join ['', [!GetAtt NotificationEventsTable.Arn, '/index/*']]

  getNotificationById:
    handler: src/handlers/notifications/getNotificationById.handler
    events:
      - http:
          path: notification_events/{id}
          method: get
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: 
          - !GetAtt NotificationEventsTable.Arn
          - !Join ['', [!GetAtt NotificationEventsTable.Arn, '/index/*']]

  replayNotification:
    handler: src/handlers/notifications/replayNotification.handler
    events:
      - http:
          path: notification_events/{id}/replay
          method: post
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:UpdateItem
          - sqs:SendMessage
        Resource: 
          - !GetAtt NotificationEventsTable.Arn
          - !Join ['', [!GetAtt NotificationEventsTable.Arn, '/index/*']]
          - !GetAtt NotificationQueue.Arn

  sendWebhook:
    handler: src/handlers/webhooks/sendWebhook.handler
    events:
      - sqs:
          arn: !GetAtt NotificationQueue.Arn
          batchSize: 1
          maximumBatchingWindow: 30
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:UpdateItem
          - sqs:ReceiveMessage
          - sqs:DeleteMessage
          - sqs:GetQueueAttributes
          - sqs:ChangeMessageVisibility
        Resource: 
          - !GetAtt NotificationEventsTable.Arn
          - !Join ['', [!GetAtt NotificationEventsTable.Arn, '/index/*']]
          - !GetAtt NotificationQueue.Arn
          - !GetAtt NotificationDeadLetterQueue.Arn 